{"ast":null,"code":"var _jsxFileName = \"/Users/negin/Desktop/Codding/React/baby-name/baby-name/src/BabyList.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BabyList = ({\n  names\n}) => {\n  const [updatedNames, setUpdatedNames] = useState;\n\n  const onClick = nameObject => {\n    const newNames = updatedNames.map(updatedName => {\n      if (nameObject.id === updatedName.id) {\n        updatedName.favourite = !updatedName.favourite;\n      }\n\n      return updatedName;\n    });\n    console.log(newNames);\n  };\n\n  console.log(updatedNames);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: updatedNames.map(nameObject => /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => onClick(nameObject),\n      children: nameObject.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BabyList;\nexport default BabyList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BabyList\");","map":{"version":3,"sources":["/Users/negin/Desktop/Codding/React/baby-name/baby-name/src/BabyList.js"],"names":["useState","BabyList","names","updatedNames","setUpdatedNames","onClick","nameObject","newNames","map","updatedName","id","favourite","console","log","name"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAEhC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAiCJ,QAAvC;;AACE,QAAMK,OAAO,GAAIC,UAAD,IAAgB;AAC9B,UAAMC,QAAQ,GAAGJ,YAAY,CAACK,GAAb,CAAkBC,WAAD,IAAiB;AACjD,UAAIH,UAAU,CAACI,EAAX,KAAkBD,WAAW,CAACC,EAAlC,EAAsC;AACpCD,QAAAA,WAAW,CAACE,SAAZ,GAAwB,CAACF,WAAW,CAACE,SAArC;AACD;;AACD,aAAOF,WAAP;AACD,KALgB,CAAjB;AAMAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACD,GARD;;AASAK,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACA,sBACE;AAAA,cACGA,YAAY,CAACK,GAAb,CAAkBF,UAAD,iBAChB;AAAI,MAAA,OAAO,EAAE,MAAMD,OAAO,CAACC,UAAD,CAA1B;AAAA,gBAAyCA,UAAU,CAACQ;AAApD;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApBD;;KAAMb,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\n\nconst BabyList = ({ names }) => {\n\nconst [updatedNames, setUpdatedNames]= useState\n  const onClick = (nameObject) => {\n    const newNames = updatedNames.map((updatedName) => {\n      if (nameObject.id === updatedName.id) {\n        updatedName.favourite = !updatedName.favourite;\n      }\n      return updatedName;\n    });\n    console.log(newNames);\n  };\n  console.log(updatedNames);\n  return (\n    <ul>\n      {updatedNames.map((nameObject) => (\n        <li onClick={() => onClick(nameObject)}>{nameObject.name}</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default BabyList;\n"]},"metadata":{},"sourceType":"module"}