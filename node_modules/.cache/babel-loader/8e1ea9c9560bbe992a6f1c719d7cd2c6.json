{"ast":null,"code":"var _jsxFileName = \"/Users/negin/Desktop/Codding/React/baby-name/baby-name/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport data from \"./data/babyNamesData.json\";\nimport NameList from \"./Components/NameList\";\nimport Search from \"./Components/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortNames = data.map(name => ({ ...name,\n  favourite: false\n})).sort((nameOne, nameTwo) => nameOne.name.localeCompare(nameTwo.name));\n\nconst App = () => {\n  _s();\n\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [sortedNames, setSortedNames] = useState(sortNames); // const [favourite, setFavourites] = useState(false);\n\n  const filteredNames = sortedNames.filter(entry => {\n    const test = entry.name.toLowerCase().includes(searchInput.toLowerCase()) && entry.favourite === false;\n  });\n\n  const handleClick = nameObj => {\n    const updatedNames = sortedNames.map(name => {\n      if (name.id === nameObj.id) {\n        name.favourite = !name.favourite;\n        return { ...name\n        };\n      }\n\n      return name;\n    });\n    setSortedNames(updatedNames);\n  };\n\n  const favouriteNames = sortedNames.filter(name => name.favourite === true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      searchInput: searchInput,\n      setSearchInput: setSearchInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameList, {\n      handleClick: handleClick,\n      names: favouriteNames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameList, {\n      handleClick: handleClick,\n      names: filteredNames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"WI6S6/+fX1/wDxXQHjBFM7UVVUI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/negin/Desktop/Codding/React/baby-name/baby-name/src/App.js"],"names":["useState","data","NameList","Search","sortNames","map","name","favourite","sort","nameOne","nameTwo","localeCompare","App","searchInput","setSearchInput","sortedNames","setSortedNames","filteredNames","filter","entry","test","toLowerCase","includes","handleClick","nameObj","updatedNames","id","favouriteNames"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,SAAS,GAAGH,IAAI,CACnBI,GADe,CACVC,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWC,EAAAA,SAAS,EAAE;AAAtB,CAAX,CADW,EAEfC,IAFe,CAEV,CAACC,OAAD,EAAUC,OAAV,KAAsBD,OAAO,CAACH,IAAR,CAAaK,aAAb,CAA2BD,OAAO,CAACJ,IAAnC,CAFZ,CAAlB;;AAIA,MAAMM,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAACI,SAAD,CAA9C,CAFgB,CAGhB;;AAEA,QAAMa,aAAa,GAAGF,WAAW,CAACG,MAAZ,CAAoBC,KAAD,IAAW;AAClD,UAAMC,IAAI,GAAGD,KAAK,CAACb,IAAN,CAAWe,WAAX,GAAyBC,QAAzB,CAAkCT,WAAW,CAACQ,WAAZ,EAAlC,KAAgEF,KAAK,CAACZ,SAAN,KAAoB,KAAjG;AAED,GAHqB,CAAtB;;AAKA,QAAMgB,WAAW,GAAIC,OAAD,IAAa;AAE/B,UAAMC,YAAY,GAAGV,WAAW,CAACV,GAAZ,CAAiBC,IAAD,IAAU;AAC7C,UAAIA,IAAI,CAACoB,EAAL,KAAYF,OAAO,CAACE,EAAxB,EAA4B;AAC1BpB,QAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACA,eAAO,EAAE,GAAGD;AAAL,SAAP;AACD;;AACD,aAAOA,IAAP;AACD,KANoB,CAArB;AAOAU,IAAAA,cAAc,CAACS,YAAD,CAAd;AACD,GAVD;;AAYA,QAAME,cAAc,GAAGZ,WAAW,CAACG,MAAZ,CAAoBZ,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmB,IAAhD,CAAvB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEM,WAArB;AAAkC,MAAA,cAAc,EAAEC;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAES,WAAvB;AAAoC,MAAA,KAAK,EAAEI;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEJ,WAAvB;AAAoC,MAAA,KAAK,EAAEN;AAA3C;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA/BD;;GAAML,G;;KAAAA,G;AAgCN,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport data from \"./data/babyNamesData.json\";\nimport NameList from \"./Components/NameList\";\nimport Search from \"./Components/Search\";\n\nconst sortNames = data\n  .map((name) => ({ ...name, favourite: false }))\n  .sort((nameOne, nameTwo) => nameOne.name.localeCompare(nameTwo.name));\n\nconst App = () => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [sortedNames, setSortedNames] = useState(sortNames);\n  // const [favourite, setFavourites] = useState(false);\n\n  const filteredNames = sortedNames.filter((entry) => {\n    const test = entry.name.toLowerCase().includes(searchInput.toLowerCase()) && entry.favourite === false;\n    \n  });\n\n  const handleClick = (nameObj) => {\n\n    const updatedNames = sortedNames.map((name) => {\n      if (name.id === nameObj.id) {\n        name.favourite = !name.favourite;\n        return { ...name };\n      }\n      return name;\n    });\n    setSortedNames(updatedNames);\n  };\n\n  const favouriteNames = sortedNames.filter((name) => name.favourite === true);\n\n  return (\n    <div className=\"App\">\n      <Search searchInput={searchInput} setSearchInput={setSearchInput} />\n      <NameList handleClick={handleClick} names={favouriteNames} />\n      <NameList handleClick={handleClick} names={filteredNames} />\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}